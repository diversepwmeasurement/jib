jobs:
  release:
    name: Prepare Jib release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Check input
      run: "echo '* input project: \"${{ github.event.inputs.project }}\"'\n\ncase\
        \ ${{ github.event.inputs.project }} in\n  build-plan|core|maven|gradle|extension-common|maven-extension|gradle-extension)\
        \ ;;\n  *) echo 'invalid input project name \"${{ github.event.inputs.project\
        \ }}\"'\n     exit 1\n     ;;\nesac\nif [[ ! \"${{ github.event.inputs.release_version\
        \ }}\" =~ ^[0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n  echo 'version \"${{ github.event.inputs.release_version\
        \ }}\" not in ###.###.### format'\n  exit 1\nfi\n"
    - continue-on-error: true
      name: Build project
      run: '# TODO: run integration test? (Requries auth with GCP.)

        ./gradlew clean build --stacktrace

        '
    - continue-on-error: true
      name: Run Gradle release
      run: "git checkout -b ${{ github.event.inputs.project }}-release-v${{ github.event.inputs.release_version\
        \ }}\ngit config user.email ${{ github.actor }}@users.noreply.github.com\n\
        git config user.name ${{ github.actor }}\n\nPROJECT=$( case ${{ github.event.inputs.project\
        \ }} in\n  extension-common) echo jib-plugins-extension-common ;;\n  maven-extension)\
        \  echo jib-maven-plugin-extension-api ;;\n  gradle-extension) echo jib-gradle-plugin-extension-api\
        \ ;;\n  maven|gradle)     echo jib-${{ github.event.inputs.project }}-plugin\
        \ ;;\n  *)                echo jib-${{ github.event.inputs.project }} ;;\n\
        esac )\n# This creates the tag (e.g., \"v0.1.0-gradle\") and pushes the updated\n\
        # branch (e.g., \"gradle-release-v0.1.0\") and the new tag.\n./gradlew \"\
        ${PROJECT}\":release \\\n  -Prelease.useAutomaticVersion=true \\\n  -Prelease.releaseVersion=${{\
        \ github.event.inputs.release_version }}\n"
    - continue-on-error: true
      id: create-pr
      name: Create pull request
      uses: repo-sync/pull-request@v2.12.1
      with:
        github_token: ${{ secrets.GA_RELEASE_PR_PERSONAL_TOKEN }}
        pr_body: To be merged after the release is complete.
        pr_label: 'PR: Merge After Release'
        pr_title: ${{ github.event.inputs.project }} release v${{ github.event.inputs.release_version
          }}
        source_branch: ${{ github.event.inputs.project }}-release-v${{ github.event.inputs.release_version
          }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create-plugin-release
      if: ${{ github.event.inputs.project == 'maven' || github.event.inputs.project
        == 'gradle' }}
      name: Draft Maven/Gradle GitHub release
      uses: actions/create-release@v1.1.4
      with:
        body: '**Run `./jib-${{ github.event.inputs.project }}-plugin/scripts/update_gcs_latest.sh
          ${{ github.event.inputs.release_version }}`

          when the release is complete to update the latest version string on GCS.**


          ---

          ### Major Changes


          See [CHANGELOG.md](https://github.com/GoogleContainerTools/jib/blob/master/jib-${{
          github.event.inputs.project }}-plugin/CHANGELOG.md) for more details.

          '
        draft: true
        release_name: jib-${{ github.event.inputs.project }}-plugin v${{ github.event.inputs.release_version
          }}
        tag_name: v${{ github.event.inputs.release_version }}-${{ github.event.inputs.project
          }}
    - continue-on-error: true
      env:
        CHANGELOG_URL: https://github.com/GoogleContainerTools/jib/blob/master/jib-${{
          github.event.inputs.project }}-plugin/CHANGELOG.md
        GCS_UPDATE_SCRIPT: '`./jib-${{ github.event.inputs.project }}-plugin/scripts/update_gcs_latest.sh
          ${{ github.event.inputs.release_version }}`'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        README_URL: https://github.com/GoogleContainerTools/jib/blob/master/jib-${{
          github.event.inputs.project }}-plugin/README.md
        RELEASE_DRAFT: ${{ steps.create-plugin-release.outputs.html_url }}
        RELEASE_NAME: v${{ github.event.inputs.release_version }}-${{ github.event.inputs.project
          }}
        RELEASE_PR: ${{steps.create-pr.outputs.pr_url}}
      if: ${{ github.event.inputs.project == 'maven' || github.event.inputs.project
        == 'gradle' }}
      name: Create Maven/Gradle release checklist issue
      uses: JasonEtco/create-an-issue@v2.9.2
      with:
        filename: .github/RELEASE_TEMPLATES/plugin_release_checklist.md
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create-core-release
      if: ${{ github.event.inputs.project == 'core' }}
      name: Draft Core GitHub release
      uses: actions/create-release@v1.1.4
      with:
        body: '### Major Changes


          See [CHANGELOG.md](https://github.com/GoogleContainerTools/jib/blob/master/jib-core/CHANGELOG.md)
          for more details.

          '
        draft: true
        release_name: jib-core v${{ github.event.inputs.release_version }}
        tag_name: v${{ github.event.inputs.release_version }}-core
    - continue-on-error: true
      env:
        CHANGELOG_URL: https://github.com/GoogleContainerTools/jib/blob/master/jib-core/CHANGELOG.md
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        README_URL: https://github.com/GoogleContainerTools/jib/blob/master/jib-core/README.md
        RELEASE_DRAFT: ${{ steps.create-core-release.outputs.html_url }}
        RELEASE_NAME: v${{ github.event.inputs.release_version }}-core
        RELEASE_PR: ${{steps.create-pr.outputs.pr_url}}
      if: ${{ github.event.inputs.project == 'core' }}
      name: Create Core release checklist issue
      uses: JasonEtco/create-an-issue@v2.9.2
      with:
        filename: .github/RELEASE_TEMPLATES/core_release_checklist.md
name: Prepare Jib release
on:
  repository_dispatch:
    types: trigger-ga___prepare-release.yml
